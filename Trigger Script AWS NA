#!/bin/bash

JENKINS_URL="https://dev-deployments.csnonprod.com"
TOKEN="xRPyRrQCDYxZdrYxcOAhxsyFG"
USERNAME="remoteuser"
PASSWORD="111ffb3b647ea5d22a81fd9897b25cd151"

#UI_Parameters
RELEASE="naProd"
BRANCH="qa-automation-refactoring-v2.0.0"
Env="naProd"
SLACKID="C06A31VD1UK"

#API_Parameters
CDA_ENV="NaProd"
SEARCH_ENV="NaProd"
SEARCH_OPTION="SEARCH_FULL_SANITY"
SEARCHVARIANT_ENV="NaProd"
SEARCHVARIANT_OPTION="SEARCH_VARIANTS_SANITY"

# Credentials
CREDS=c2FuaXR5X3VzZXI6djJoM2x4VjcwRENsMDFQTHJWbG9id2Mx
#CREDS=cHJhbmF2OlByYXBAMTk5NQ==

#GoCDPipelines
RTE_PIPELINE="prod-rte-full-e2e-sanity" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/prod-rte-full-e2e-sanity
CLI_COMBAINED_PIPELINE="cli-aws-na-production-sanity" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/cli-aws-na-production-sanity
GRAPHQL_PREVIEW_PIPELINE="graphql-preview-api-na-prod-deploy" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/graphql-preview-api-na-prod-deploy
RESTPREVIEW_PIPELINE="rest-preview-api-na-prod-deploy" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/rest-preview-api-na-prod-deploy
TIMELINEPREVIEW_PIPELINE="prod-preview-ui-deploy" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/prod-preview-ui-deploy
LIVE_PREVIEW="prod-livepreview-full-sanity" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/prod-livepreview-full-sanity
VISUALBUILDER_PIPELINE="prod-visual-builder-ui-deploy" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/prod-visual-builder-ui-deploy
AIASSISTANT_PIPELINE="naprod-ai-assistant-e2e-sanity" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/naprod-ai-assistant-e2e-sanity
BRANDKIT_PIPELINE="naprod-brand-kit-e2e-sanity" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/naprod-brand-kit-e2e-sanity
AUTH_PIPELINE="auth-background-jobs-service-prod-deploy" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/auth-background-jobs-service-prod-deploy
#WEBHOOKS_PIPELINE=""
#ARGUS_PIPELINE=""
LAUNCH_PIPELINE="contentfly-deployment-agent-prod-deploy" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/contentfly-deployment-agent-prod-deploy
DEVELOPERHUB_PIPELINE="developerhub-ui-prod-deploy" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/developerhub-ui-prod-deploy
AUTOMATION_PIPELINE="prod-automations-ui-deploy" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/prod-automations-ui-deploy
PERSONALIZATION_PIPELINE="personalization-service-prod-deploy" #https://gocd-yxq6yfhia1nz.contentstack.com/go/pipelines?viewName=Default#!/personalization-service-prod-deploy


# #Triggering RTE Basic Sanity - UI
# curl -X POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$RTE_PIPELINE/schedule" -H 'Accept: application/vnd.go.cd.v1+json' -H 'Content-Type: application/json' -H "Authorization: Basic $CREDS" -H 'X-GoCD-Confirm: true' > /dev/null 2>&1 &
# echo "RTE Basic Sanity - UI triggered successfully"


# #Triggering Search Variants Sanity - API
# curl -X POST "$JENKINS_URL/job/cs-qa-Search-FullSanity-Runner/buildWithParameters?token=$TOKEN&Environment=$SEARCHVARIANT_ENV&Option=$SEARCHVARIANT_OPTION&Retry_Failed_Sanity=falserue&Fetch_Report_Only=false" \
#      --user "$USERNAME:$PASSWORD" > /dev/null 2>&1 &
# echo "Triggerd Search Variants Sanity - API Successfullly"


# # Triggering Assets Full Sanity - UI
# curl -X POST "$JENKINS_URL/job/QA-Venus-UI-Assets/buildWithParameters?token=$TOKEN&release=$RELEASE&tag=$BRANCH&SlackChannelID=$SLACKID&env=$Env" \
#      --user "$USERNAME:$PASSWORD" > /dev/null 2>&1 &
# echo "triggered Assets Full Sanity - UI successfully"


# Triggering Full Sanity - UI
curl -X POST "$JENKINS_URL/job/QA-Venus-UI/buildWithParameters?token=$TOKEN&release=$RELEASE&tag=$BRANCH&SlackChannelID=$SLACKID&env=$Env" \
     --user "$USERNAME:$PASSWORD" > /dev/null 2>&1 &
echo "triggered Full Sanity - UI successfully"


# # Triggering Search Full Sanity - UI
# curl -X POST "$JENKINS_URL/job/QA-Venus-UI-Search/buildWithParameters?token=$TOKEN&release=$RELEASE&tag=$BRANCH&SlackChannelID=$SLACKID&env=$Env" \
#      --user "$USERNAME:$PASSWORD" > /dev/null 2>&1 &
# echo "triggered Search Full Sanity - UI successfully"


# # Triggering Taxonomy Full Sanity - UI
# curl -X POST "$JENKINS_URL/job/QA-Venus-UI-Taxonomy/buildWithParameters?token=$TOKEN&release=$RELEASE&tag=$BRANCH&SlackChannelID=$SLACKID&env=$Env" \
#      --user "$USERNAME:$PASSWORD" > /dev/null 2>&1 &
# echo "triggered Taxonomy Full Sanity - UI successfully"


# # Triggering Variants Full Sanity - UI
# curl -X POST "$JENKINS_URL/job/QA-Venus-UI-Variants/buildWithParameters?token=$TOKEN&release=$RELEASE&tag=$BRANCH&SlackChannelID=$SLACKID&env=$Env" \
#      --user "$USERNAME:$PASSWORD" > /dev/null 2>&1 &
# echo "triggered Variants Full Sanity - UI successfully"


# # Triggering Extensions Full Sanity - UI
# curl -X POST "$JENKINS_URL/job/QA-Venus-UI-Extensions/buildWithParameters?token=$TOKEN&release=$RELEASE&tag=$BRANCH&SlackChannelID=$SLACKID&env=$Env" \
#      --user "$USERNAME:$PASSWORD" > /dev/null 2>&1 &
# echo "triggered Extensions Full Sanity - UI successfully"


# # Triggering Releases20 Full Sanity - UI
# curl -X POST "$JENKINS_URL/job/QA-Venus-UI-Releases20/buildWithParameters?token=$TOKEN&release=$RELEASE&tag=$BRANCH&SlackChannelID=$SLACKID&env=$Env" \
#      --user "$USERNAME:$PASSWORD" > /dev/null 2>&1 &
# echo "triggered Releases20 Full Sanity - UI successfully"

# # Triggering CLI COMBAINED - Sanity
# curl -X POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$CLI_COMBAINED_PIPELINE/schedule" -H 'Accept: application/vnd.go.cd.v1+json' -H 'Content-Type: application/json' -H "Authorization: Basic $CREDS" -H 'X-GoCD-Confirm: true' > /dev/null 2>&1 &
# echo "CLI COMBAINED - Sanity triggered successfully"


# Triggering Rest Preview - Sanity
# echo "Getting the latest instance counter for $RESTPREVIEW_PIPELINE"
# instance_counter_restpreview=$(curl --silent --location "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$RESTPREVIEW_PIPELINE/history?page_size=10" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v1+json" | jq -r '.pipelines[0].counter')
# # echo "Latest instance: $instance_counter_restpreview"
# curl --location --request POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/stages/$RESTPREVIEW_PIPELINE/$instance_counter_restpreview/sanity/run" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v2+json"
# echo "Rest Preview - Sanity triggered successfully"


# #Triggering GraphQL Preview - Sanity
# # echo "Getting the latest instance counter for $GRAPHQL_PREVIEW_PIPELINE"
# instance_counter_graphqlpreview=$(curl --silent --location "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$GRAPHQL_PREVIEW_PIPELINE/history?page_size=10" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v1+json" | jq -r '.pipelines[0].counter')
# # echo "Latest instance: $instance_counter_graphqlpreview"
# curl --location --request POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/stages/$GRAPHQL_PREVIEW_PIPELINE/$instance_counter_graphqlpreview/sanity/run" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v2+json"
# echo "GraphQL Preview - Sanity triggered successfully"


# #Triggering Timeline Preview - Sanity
# # echo "Getting the latest instance counter for $TIMELINEPREVIEW_PIPELINE"
# instance_counter_timelinepreview=$(curl --silent --location "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$TIMELINEPREVIEW_PIPELINE/history?page_size=10" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v1+json" | jq -r '.pipelines[0].counter')
# # echo "Latest instance: $instance_counter_timelinepreview"
# curl --location --request POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/stages/$TIMELINEPREVIEW_PIPELINE/$instance_counter_timelinepreview/sanity/run" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v2+json"
# echo "Timeline Preview - Sanity triggered successfully"


# #Triggering Live Preview - Sanity
# curl -X POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$LIVE_PREVIEW/schedule" -H 'Accept: application/vnd.go.cd.v1+json' -H 'Content-Type: application/json' -H "Authorization: Basic $CREDS" -H 'X-GoCD-Confirm: true' > /dev/null 2>&1 &
# echo "Live Preview - Sanity triggered successfully "


# #Triggering VisualBuilder - Sanity
# #echo "Getting the latest instance counter for $VISUALBUILDER_PIPELINE"
# instance_counter_vb=$(curl --silent --location "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$VISUALBUILDER_PIPELINE/history?page_size=10" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v1+json" | jq -r '.pipelines[0].counter')
# #echo "Latest instance: $instance_counter_vb"
# curl --location --request POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/stages/$VISUALBUILDER_PIPELINE/$instance_counter_vb/sanity/run" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v2+json"
# echo "VisualBuilder - Sanity triggered successfully"


# #Triggering Auth - Sanity
# #echo "Getting the latest instance counter for $AUTH_PIPELINE"
# instance_counter_auth=$(curl --silent --location "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$AUTH_PIPELINE/history?page_size=10" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v1+json" | jq -r '.pipelines[0].counter')
# #echo "Latest instance: $instance_counter_auth"
# curl --location --request POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/stages/$AUTH_PIPELINE/$instance_counter_auth/sanity/run" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v2+json"
# echo "Auth - Sanity triggered successfully"


# # # Triggering WEBHOOKS - Sanity
# # curl -X POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$WEBHOOKS_PIPELINE/schedule" -H 'Accept: application/vnd.go.cd.v1+json' -H 'Content-Type: application/json' -H "Authorization: Basic $CREDS" -H 'X-GoCD-Confirm: true' > /dev/null 2>&1 &
# # echo "Webhooks - Sanity triggered successfully"


# # # Triggering Argus - Sanity
# # curl -X POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$ARGUS_PIPELINE/schedule" -H 'Accept: application/vnd.go.cd.v1+json' -H 'Content-Type: application/json' -H "Authorization: Basic $CREDS" -H 'X-GoCD-Confirm: true' > /dev/null 2>&1 &
# # echo "Argus - Sanity triggered successfully"

#Triggering Contentfly - AWS Stage - Sanity
#echo "Getting the latest instance counter for $LAUNCH_PIPELINE"
instance_counter_launch=$(curl --silent --location "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$LAUNCH_PIPELINE/history?page_size=10" \
--header "Authorization: Basic $CREDS" \
--header "X-GoCD-Confirm: true" \
--header "Accept: application/vnd.go.cd.v1+json" | jq -r '.pipelines[0].counter')
#echo "Latest instance: $instance_counter_launch"
curl --location --request POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/stages/$LAUNCH_PIPELINE/$instance_counter_launch/sanity/run" \
--header "Authorization: Basic $CREDS" \
--header "X-GoCD-Confirm: true" \
--header "Accept: application/vnd.go.cd.v2+json"
echo "Contentfly - Sanity triggered successfully"


#Triggering AWS Stag - Developer Hub - Sanity
#echo "Getting the latest instance counter for $DEVELOPERHUB_PIPELINE"
instance_counter_DeveloperHub=$(curl --silent --location "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$DEVELOPERHUB_PIPELINE/history?page_size=10" \
--header "Authorization: Basic $CREDS" \
--header "X-GoCD-Confirm: true" \
--header "Accept: application/vnd.go.cd.v1+json" | jq -r '.pipelines[0].counter')
#echo "Latest instance: $instance_counter_DeveloperHub"
curl --location --request POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/stages/$DEVELOPERHUB_PIPELINE/$instance_counter_DeveloperHub/sanity/run" \
--header "Authorization: Basic $CREDS" \
--header "X-GoCD-Confirm: true" \
--header "Accept: application/vnd.go.cd.v2+json"
echo "Marketplace Service - Sanity triggered successfully"


#Triggering Automations - AWS Stage - Sanity
# echo "Getting the latest instance counter for $AUTOMATION_PIPELINE"
instance_counter_automate=$(curl --silent --location "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$AUTOMATION_PIPELINE/history?page_size=10" \
--header "Authorization: Basic $CREDS" \
--header "X-GoCD-Confirm: true" \
--header "Accept: application/vnd.go.cd.v1+json" | jq -r '.pipelines[0].counter')
# echo "Latest instance: $instance_counter_automate"
curl --location --request POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/stages/$AUTOMATION_PIPELINE/$instance_counter_automate/sanity/run" \
--header "Authorization: Basic $CREDS" \
--header "X-GoCD-Confirm: true" \
--header "Accept: application/vnd.go.cd.v2+json"
echo "Automate - Sanity triggered successfully"



# #Triggering AWS Stag - Personalization Service - Sanity
# # echo "Getting the latest instance counter for $PERSONALIZATION_PIPELINE"
# instance_counter_Personalisation=$(curl --silent --location "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$PERSONALIZATION_PIPELINE/history?page_size=10" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v1+json" | jq -r '.pipelines[0].counter')
# # echo "Latest instance: $instance_counter_Personalisation"
# curl --location --request POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/stages/$PERSONALIZATION_PIPELINE/$instance_counter_Personalisation/stag-sanity/run" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v2+json"
# echo "Personalization Service - Sanity triggered successfully"


# # Triggering CSI AI Assistant - E2E
# pause_status=$(curl --silent --location "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$AIASSISTANT_PIPELINE/status" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v1+json" | jq -r '.paused')
# if [ "$pause_status" == "true" ]; then
#     echo "Pipeline $AIASSISTANT_PIPELINE is paused. Resuming it before triggering."
#     # Unpause the pipeline
#     curl --silent --location --request POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$AIASSISTANT_PIPELINE/unpause" \
#     --header "Authorization: Basic $CREDS" \
#     --header "X-GoCD-Confirm: true" \
#     --header "Accept: application/vnd.go.cd.v1+json"   
#     # Trigger the pipeline
#     curl -X POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$AIASSISTANT_PIPELINE/schedule" \
#     -H 'Accept: application/vnd.go.cd.v1+json' \
#     -H 'Content-Type: application/json' \
#     -H "Authorization: Basic $CREDS" \
#     -H 'X-GoCD-Confirm: true' > /dev/null 2>&1 &
# else
#     echo "Pipeline $AIASSISTANT_PIPELINE is not paused. Triggering directly."   
#     # Trigger the pipeline
#     curl -X POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$AIASSISTANT_PIPELINE/schedule" \
#     -H 'Accept: application/vnd.go.cd.v1+json' \
#     -H 'Content-Type: application/json' \
#     -H "Authorization: Basic $CREDS" \
#     -H 'X-GoCD-Confirm: true' > /dev/null 2>&1 &
# fi
# echo "AI Assistant - E2E triggered successfully"


# # Triggering CSI Brand Kit - E2E
# pause_status=$(curl --silent --location "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$BRANDKIT_PIPELINE/status" \
# --header "Authorization: Basic $CREDS" \
# --header "X-GoCD-Confirm: true" \
# --header "Accept: application/vnd.go.cd.v1+json" | jq -r '.paused')
# if [ "$pause_status" == "true" ]; then
#     echo "Pipeline $BRANDKIT_PIPELINE is paused. Resuming it before triggering."
    
#     # Unpause the pipeline
#     curl --silent --location --request POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$BRANDKIT_PIPELINE/unpause" \
#     --header "Authorization: Basic $CREDS" \
#     --header "X-GoCD-Confirm: true" \
#     --header "Accept: application/vnd.go.cd.v1+json"
#     # Trigger the pipeline
#     curl -X POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$BRANDKIT_PIPELINE/schedule" \
#     -H 'Accept: application/vnd.go.cd.v1+json' \
#     -H 'Content-Type: application/json' \
#     -H "Authorization: Basic $CREDS" \
#     -H 'X-GoCD-Confirm: true' > /dev/null 2>&1 &
# else
#     echo "Pipeline $BRANDKIT_PIPELINE is not paused. Triggering directly." 
#     # Trigger the pipeline
#     curl -X POST "https://gocd-yxq6yfhia1nz.contentstack.com/go/api/pipelines/$BRANDKIT_PIPELINE/schedule" \
#     -H 'Accept: application/vnd.go.cd.v1+json' \
#     -H 'Content-Type: application/json' \
#     -H "Authorization: Basic $CREDS" \
#     -H 'X-GoCD-Confirm: true' > /dev/null 2>&1 &
# fi
# echo "Brand Kit - Sanity triggered successfully"


#Triggering CDA Basic Sanity - API
curl -X POST "$JENKINS_URL/job/cs-qa-CDA-BasicSanity-Runner/buildWithParameters?token=$TOKEN&Environment=$CDA_ENV&Option=CDA_BASIC_SANITY&Retry_Failed_Sanity=false&Fetch_Report_Only=false" \
     --user "$USERNAME:$PASSWORD" > /dev/null 2>&1 &
echo "Triggerd CDA Basic Sanity - API Successfullly"


# #Triggering Search Full Sanity - API
# curl -X POST "$JENKINS_URL/job/cs-qa-Search-FullSanity-Runner/buildWithParameters?token=$TOKEN&Environment=$SEARCH_ENV&Option=$SEARCH_OPTION&Retry_Failed_Sanity=false&Fetch_Report_Only=false" \
#      --user "$USERNAME:$PASSWORD" > /dev/null 2>&1 &
# echo "Triggerd Search Full Sanity - API Successfullly"


echo "All sanities have been triggered"